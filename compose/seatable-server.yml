---
services:
  # Seatable-Server
  # Optional labels for lets encrypt staging or custom certificates
  # caddy.tls.ca: https://acme-staging-v02.api.letsencrypt.org/directory
  # caddy.tls: "/data/certs/server-public-cert.pem /data/certs/server-private-key.pem"
  seatable-server:
    image: ${SEATABLE_IMAGE:-seatable/seatable-enterprise-testing:4.3.6}
    restart: unless-stopped
    container_name: seatable-server
    volumes:
      - "/opt/seatable-server:/shared"
      - type: bind
        source: "./seatable-license.txt"
        target: "/shared/seatable/seatable-license.txt"
        read_only: true
    environment:
      - DB_HOST=mariadb
      - DB_ROOT_PASSWD=${SEATABLE_MYSQL_ROOT_PASSWORD:?Variable is not set or empty}
      - SEATABLE_SERVER_HOSTNAME=${SEATABLE_SERVER_HOSTNAME:?Variable is not set or empty}
      - SEATABLE_SERVER_PROTOCOL=${SEATABLE_SERVER_PROTOCOL:-https}
      - SEATABLE_ADMIN_EMAIL=${SEATABLE_ADMIN_EMAIL:?Variable is not set or empty}
      - SEATABLE_ADMIN_PASSWORD=${SEATABLE_ADMIN_PASSWORD:?Variable is not set or empty}
      - TIME_ZONE=${TIME_ZONE}
      # - PYTHON_SCHEDULER_AUTH_TOKEN=${PYTHON_SCHEDULER_AUTH_TOKEN}  -- not yet suppported
    labels:
      caddy: ${SEATABLE_SERVER_HOSTNAME:?Variable is not set or empty}
      caddy.reverse_proxy: "{{upstreams 80}}"
    depends_on:
      mariadb:
        condition: service_healthy
      memcached:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - frontend-net
      - backend-seatable-net
    # healthcheck:
    #   test: ["CMD-SHELL", "curl --fail http://localhost || exit 1"]
    #   interval: 20s
    #   retries: 3
    #   start_period: 20s
    #   timeout: 10s

  mariadb:
    image: ${SEATABLE_DB_IMAGE:-mariadb:10.11.6}
    restart: unless-stopped
    container_name: mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=${SEATABLE_MYSQL_ROOT_PASSWORD:?Variable is not set or empty}
      - MYSQL_LOG_CONSOLE=true
      - MARIADB_MYSQL_LOCALHOST_USER=1
      - MARIADB_MYSQL_LOCALHOST_GRANTS=USAGE
      - MARIADB_AUTO_UPGRADE=1
    volumes:
      - "/opt/mariadb:/var/lib/mysql"
    networks:
      - backend-seatable-net
    healthcheck:
      test:
        [
          "CMD",
          "/usr/local/bin/healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--mariadbupgrade",
          "--innodb_initialized",
        ]
      interval: 10s
      retries: 3
      timeout: 5s
  # to add the equivalent user in containers not initialized with MARIADB_MYSQL_LOCALHOST_USER=1:
  #
  # CREATE USER 'mysql'@'localhost';
  # GRANT USAGE ON *.* TO 'mysql'@'localhost';
  # FLUSH PRIVILEGES;

  memcached:
    image: ${SEATABLE_MEMCACHED_IMAGE:-memcached:1.6.22-alpine}
    restart: unless-stopped
    container_name: memcached
    entrypoint: memcached -m 256
    networks:
      - backend-seatable-net

  redis:
    image: ${SEATABLE_REDIS_IMAGE:-redis:7.2.3-alpine}
    restart: unless-stopped
    container_name: redis
    networks:
      - backend-seatable-net

networks:
  frontend-net:
    name: frontend-net
  backend-seatable-net:
    name: backend-seatable-net
